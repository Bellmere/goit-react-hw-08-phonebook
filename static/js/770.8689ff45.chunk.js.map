{"version":3,"file":"static/js/770.8689ff45.chunk.js","mappings":"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","sources":["Redux/Contacts/Selectors.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.filter;","// extracted by mini-css-extract-plugin\nexport default {\"contact__list\":\"ContactList_contact__list__2jNwc\",\"contact__list__item\":\"ContactList_contact__list__item__fOWm7\",\"contact__list__btn\":\"ContactList_contact__list__btn__5X2Ck\"};","import { delContact } from 'Redux/Contacts/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter, getContacts } from 'Redux/Contacts/Selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport { useState } from 'react';\nimport css from '../ContactList/ContactList.module.css';\n\nconst getNormalizedContacts = (contacts, filter) => {\n  if (!filter) {\n    return contacts;\n  } else {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n};\n\n\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const normalizedContacts = getNormalizedContacts(contacts, filter);\n  const [loading, setLoading] = useState('');\n\n  const dispatch = useDispatch();\n  const handleDelete = async id => {\n    setLoading(id);\n    try {\n      await dispatch(delContact(id));\n      setLoading('');\n    } catch (error) {\n      console.log(error);\n    }\n  } \n\n\n    return (\n        <div>\n            <ul className={css.contact__list}>\n                {normalizedContacts.map((contact, id) => (\n                    <li key={id} className={css.contact__list__item}>\n                        <span>{contact.name} :</span>\n                        <span>{contact.number}</span>\n                        <button\n                        className={css.contact__list__btn} \n                        onClick={() => handleDelete(contact.id)}\n                        >\n                          {\n                            loading === contact.id ? (<Loader />) : (<span>Delete</span>)\n                          }\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form__label\":\"ContactForm_form__label__8W82B\",\"form__inputName\":\"ContactForm_form__inputName__fnduK\",\"form__submitBtn\":\"ContactForm_form__submitBtn__AY-Rx\"};","import React from 'react';\nimport { useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { addContact } from 'Redux/Contacts/operations';\nimport { getContacts } from 'Redux/Contacts/Selectors';\nimport css from '../ContactForm/ContactForm.module.css';\nimport { Loader } from 'components/Loader/Loader';\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\nexport const ContactForm = () => {\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const items = useSelector(getContacts);\n  const flag = useRef(false);\n\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n        case 'name':\n            setName(value)\n            break;\n        case 'number':\n            setNumber(value);\n            break;\n    \n        default:\n            break;\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    flag.current = true;\n      const contactsList = [...items];\n    if (contactsList.findIndex(contact => name.toLocaleLowerCase() === contact.name.toLocaleLowerCase()) !== -1) {\n      alert(`${name} is already in contacts.`);\n      flag.current = false;\n      return;\n    }\n    try {\n      await dispatch(addContact({ name: name, number: number }));\n      reset();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n    flag.current = false;\n}\n\n    return (\n        <form onSubmit={handleSubmit} className={css.form}>\n            <label htmlFor={nameInputId} className={css.form__label}>Name</label>\n            <input\n            className={css.form__inputName}\n            id={nameInputId}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n            />\n            <label htmlFor={numberInputId} className={css.form__label}>Number</label>\n            <input\n            className={css.form__inputName}\n            id={numberInputId}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n            />\n            <button \n            type='submit'\n            className={css.form__submitBtn}\n            >\n                {flag.current === true? (<Loader/>) : (<span>Add Contact</span>)}\n            </button>\n        </form>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"filter__wrapper\":\"Filter_filter__wrapper__RVCEc\",\"filter__label\":\"Filter_filter__label__ttfPR\",\"filter__input\":\"Filter_filter__input__toa89\"};","import css from '../Filter/Filter.module.css';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { change } from 'Redux/Contacts/filterSlice';\nimport { getFilter } from 'Redux/Contacts/Selectors';\n\nconst filterInputId = nanoid();\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(getFilter);\n\n    const handleChange = e => {\n        dispatch(change(e.target.value));\n      };\n\n    return (\n        <div className={css.filter__wrapper}>\n            <label\n            className={css.filter__label}\n            htmlFor={filterInputId}\n            >\n                Find contacts by name\n            </label>\n            <input\n            className={css.filter__input}\n            id={filterInputId}\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={handleChange}\n            />\n        </div>\n    );\n}","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { getIsLoading } from \"Redux/Contacts/Selectors\";\nimport { fetchContacts } from \"Redux/Contacts/operations\";\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(getIsLoading);\n\n    useEffect(() => {\n      dispatch(fetchContacts());\n    }, [dispatch]);\n\n      return (\n        <HelmetProvider>\n          <div\n            style={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            fontSize: 20,\n            color: '#010101',\n          }}\n          >\n          <Helmet>\n            <title>Phonebook</title>\n          </Helmet>\n          <ContactForm />\n          {isLoading && <Loader/>}\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </div>\n        </HelmetProvider>\n      );\n};"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","ContactList","normalizedContacts","contact","name","toLowerCase","includes","getNormalizedContacts","useSelector","useState","loading","setLoading","dispatch","useDispatch","handleDelete","id","delContact","console","log","className","css","map","number","onClick","Loader","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nameInputId","numberInputId","ContactForm","setName","setNumber","flag","useRef","handleChange","e","target","value","handleSubmit","preventDefault","current","findIndex","toLocaleLowerCase","alert","addContact","reset","onSubmit","htmlFor","type","pattern","title","required","onChange","filterInputId","Filter","change","Contacts","useEffect","fetchContacts","style","display","flexDirection","justifyContent","alignItems","fontSize","color"],"sourceRoot":""}